@model LectureRoomMgt.Models.ViewModels.RolesViewModel;
@inject IAuthorizationService authorization
@{
    ViewBag.Title = "Roles";
    ViewBag.View = "Roles";

    var ModClaimCheck = (await authorization.AuthorizeAsync(User, "ModifyRole")).Succeeded ? "true" : "false";
    var DelClaimCheck = (await authorization.AuthorizeAsync(User, "RemoveRole")).Succeeded ? "true" : "false";
    var UserRoleClaimCheck = (await authorization.AuthorizeAsync(User, "ViewRoleUser")).Succeeded ? "true" : "false";
    var RoleClaimCheck = (await authorization.AuthorizeAsync(User, "ViewRoleClaim")).Succeeded ? "true" : "false";
}

<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit role</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="myModalBody">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-success btn-sm" id="btnEdit">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Are you sure?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="myModalBody">
                <p>Do you really want to delete this record?<br /> <b>This process cannot be undone</b>.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger btn-sm" id="btnDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="errorModalLabel">404 Error Page</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="myModalBody">
                <div class="error-page">
                    <h2 class="headline text-warning">404</h2>

                    <div class="error-content">
                        <h3><i class="fas fa-exclamation-triangle text-warning"></i> Oops! Page not found..</h3>
                        <p>
                            Meanwhile, you may <a href='@Url.Action("Index", "Home")'>return to HOME</a> or contact the system administrator.
                        </p>

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@Html.AntiForgeryToken()
@if ((await authorization.AuthorizeAsync(User, "CreateRole")).Succeeded)
{
    <div class="row">
        <div class="col-4 offset-4">
            <form id="saveForm">
                <div class="form-row">
                    <div class="form-group col-9 mb-3">
                        <label asp-for="Rolename" class="control-label"></label>
                        <input asp-for="Rolename" class="form-control" />
                        <span asp-validation-for="Rolename" class="text-danger"></span>
                    </div>
                    <div class="form-group col-3 mb-3 mt-4">
                        <div class="mt-2">
                            <button id="btnSave" class="btn btn-success btn-sm" data-toggle="tooltip" data-placement="bottom" title="Save !"><i class="fa fa-save"></i> Save</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <hr />

}

<table id="infoTable" class="table table-hover table-striped">
    <thead>
        <tr class="info" style="background-color:gainsboro">
            <th style="text-align:center;border-right-style:groove">
                @Html.DisplayName("Information")
            </th>
            <th colspan="4" style="text-align:center">
                @Html.DisplayName("Action")
            </th>

        </tr>


        <tr class="info">

            <th>
                @Html.DisplayNameFor(model => model.Rolename)
            </th>
            <th>
            </th>
            <th>
            </th>
            <th>
            </th>
            <th>
            </th>

        </tr>

    </thead>
</table>
<input type="hidden" id="hiddenRoleID" />

<script>
    $(document).ready(function () {

        var table = $('#infoTable').DataTable({
            "ajax": '@Url.Action("RolesLoad", "Admin")',
            "columnDefs": [
                    { "targets": [1], "visible": @ModClaimCheck, "width": "10px" },
                    { "targets": [2], "visible": @DelClaimCheck, "width": "10px" },
                    { "targets": [3], "visible": @UserRoleClaimCheck, "width": "55px" },
                    { "targets": [4], "visible": @RoleClaimCheck, "width": "60px" }

                    ],
            "columns": [
                        { "data": "Rolename", "autowidth": true },
                        { "data": "EncryptRoleId", "render": function (data, type, row) {

                           return '<a id="' + data + '" class="btn btn-warning btn-xs tblBtnEdit" href="#" data-toggle="tooltip" data-placement="bottom" title="Edit!"> <span class="fas fa-edit"></span> </a>';                                 },"orderable": false
                        },
                        { "data": "EncryptRoleId", "render": function (data, type, row) {

                           return '<a id="' + data + '" class="btn btn-danger btn-xs tblBtnDelete" href="#" data-toggle="tooltip" data-placement="bottom" title="Delete!"> <span class="fas fa-trash-alt"></span> </a>';
                                 },"orderable": false
                        },
                        { "data": "EncryptRoleId", "render": function (data, type, row) {

                           return '<a href="/Admin/IndexUsersRoles?roleId='+ data +'"  class="btn btn-info btn-xs" data-toggle="tooltip" data-placement="bottom" title="Add/Remove users !"><i class="fas fa-user-edit"></i> Users</a>'
                                 },"orderable": false
                        },
                        { "data": "EncryptRoleId", "render": function (data, type, row) {

                           return '<a href="/Admin/IndexRolesClaims?roleId='+ data +'"  class="btn btn-success btn-xs" data-toggle="tooltip" data-placement="bottom" title="Add/Remove claims !"><i class="fas fa-list-ul"></i> Claims</a>'
                                 },"orderable": false
                        }

                    ],
            "scrollY": "300px",
            "scrollCollapse": true,
            "autoWidth": true,
            "processing": true,
            "rowId": 'EncryptRoleId'
        });

        $('#infoTable').on('click', '.tblBtnEdit', function () {
            $.ajax({
                type: "GET",
                url: '@Url.Action("EditRole", "Admin")',
                contentType: "application/json; charset=utf-8",
                data: { id: $(this).attr('id') },
                datatype: "json",
            }).done(function (response) {
                if (response.status != "1") {
                    $('#myModalBody').html(response);
                    $('#editModal').modal('show');
                }
                else {
                   $('#errorModal').modal('show');
                }
            });
        });

        $('#infoTable').on('click', '.tblBtnDelete', function () {
            $("#hiddenRoleID").val($(this).attr('id'));
            $('#deleteModal').modal('show');
        });


        $("#btnSave").click(function (e) {
            e.preventDefault();

            if (!$('#saveForm').valid()) {
                return false;
            }
            var RoleObj = {
                Rolename: $('#Rolename').val()
            };

            $.ajax({
                cache: false,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("CreateRole", "Admin")',
                dataType: "json",
                data: JSON.stringify(RoleObj),
                headers: { RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val() }
            }).done(function (response) {
                if (response.status == "1") {
                    $('#Rolename').val('');

                    table.row.add({
                         "Rolename": response.rolesViewModel['Rolename'],
                        "EncryptRoleId": response.rolesViewModel['EncryptRoleId'],
                        "EncryptRoleId": response.rolesViewModel['EncryptRoleId'],
                        "EncryptRoleId": response.rolesViewModel['EncryptRoleId'],
                        "EncryptRoleId": response.rolesViewModel['EncryptRoleId']
                    }).draw(false);
                    $("#countSpan").text(response.count);

                    toastr.success('Saved successfully !');
                }
                else if (response.status == "2") {
                    toastr.warning(response.message);
                }
                else if (response.status == "3") {
                    toastr.warning('Password is not strong, see the info for a strong password !');
                }
                else {
                    toastr.error('An error has occured !');
                }
            }).fail(function (response) {
                toastr.error('An unknown error has occured, Please contact administrator !');
            });
        });


        $("#btnEdit").click(function () {

            $.validator.unobtrusive.parse($('#editForm'));

            if (!$('#editForm').valid()) {
                return false;
            }

            var RoleObj = {
                Rolename: $('#MRolename').val(),
                EncryptRoleId: $('#EncryptRoleId').val(),
            };

            $.ajax({
                cache: false,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("EditRole", "Admin")',
                dataType: "json",
                data: JSON.stringify(RoleObj),
                headers: { RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val() }
            }).done(function (response) {
                if (response.status == "1") {
                    $('#editModal').modal('hide');

                    table.row('#' + $('#EncryptRoleId').val()).remove().draw(false);
                    table.row.add({
                         "Rolename": response.rolesViewModel['Rolename'],
                         "EncryptRoleId": response.rolesViewModel['EncryptRoleId'],
                         "EncryptRoleId": response.rolesViewModel['EncryptRoleId'],
                         "EncryptRoleId": response.rolesViewModel['EncryptRoleId'],
                         "EncryptRoleId": response.rolesViewModel['EncryptRoleId']
                    }).draw(false);

                    toastr.success('Updated successfully !');
                }
                else if (response.status == "2") {
                    $('#editModal').modal('hide');
                    toastr.warning(response.message);
                }
                else {
                    toastr.error('An error has occured !');
                }
            }).fail(function (response) {
                toastr.error('An unknown error has occured, Please contact administrator !');
            });
        });


        $("#btnDelete").click(function (e) {
            e.preventDefault();

            var RoleId = $("#hiddenRoleID").val();

            $.ajax({
                cache: false,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("DeleteRole", "Admin")',
                dataType: "json",
                data: JSON.stringify(RoleId),
                headers: { RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val() }
            }).done(function (response) {
                if (response.status == "1") {
                    $('#deleteModal').modal('hide');
                    table.row('#' + RoleId).remove().draw(false);
                    $("#countSpan").text(parseInt($("#countSpan").text()) - 1);
                    toastr.success('Deleted successfully !');
                }
                else {
                    toastr.error('An error has occured !');
                }
            }).fail(function (jqXHR, textStatus) {
                toastr.error('An unknown error has occured, Please contact administrator !');
            });
        });
    });

</script>
